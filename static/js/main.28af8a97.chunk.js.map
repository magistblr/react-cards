{"version":3,"sources":["components/SuperRadio/SuperRadio.module.css","components/SuperInputText/SuperInputText.module.css","components/SuperButton/SuperButton.module.css","components/SuperCheckbox/SuperCheckbox.module.css","components/SuperSelect/SuperSelect.module.css","pages/Test/Test.module.css","pages/Login/Login.module.css","pages/NewPassword/NewPassword.module.css","pages/Profile/Profile.module.css","pages/Registration/Registration.module.css","pages/RestorePassword/RestorePassword.module.css","components/SuperButton/SuperButton.tsx","components/SuperCheckbox/SuperCheckbox.tsx","components/SuperInputText/SuperInputText.tsx","components/SuperEditableSpan/SuperEditableSpan.tsx","components/SuperRadio/SuperRadio.tsx","components/SuperSelect/SuperSelect.tsx","pages/Test/Test.tsx","pages/Login/Login.tsx","pages/NewPassword/NewPassword.tsx","pages/Profile/Profile.tsx","pages/Registration/Registration.tsx","pages/RestorePassword/RestorePassword.tsx","main/React/app/App.tsx","redux/reducers/cardsReducer.ts","redux/state.ts","index.tsx"],"names":["module","exports","SuperButton","red","className","restProps","finalClassName","s","default","delete","SuperCheckbox","type","onChange","onChangeChecked","children","spanClassName","finalInputClassName","checkbox","e","currentTarget","checked","SuperInputText","onChangeText","onKeyPress","onEnter","error","finalSpanClassName","errorInput","superInput","value","key","SuperEditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","onDoubleClick","restSpanProps","SuperRadio","name","options","onChangeOption","onChangeCallback","mappedOptions","map","o","i","radio","style_d","radio__checkmark","radio__body","wrapper","SuperSelect","selected","box","Test","arr","Login","NewPassword","Profile","Registration","RestorePassword","App","path","element","initialState","rootReducer","combineReducers","cardsPage","state","action","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28af8a97.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SuperRadio_wrapper__3yObF\",\"radio\":\"SuperRadio_radio__1jtZh\",\"style_d\":\"SuperRadio_style_d__7N0Yq\",\"radio__checkmark\":\"SuperRadio_radio__checkmark__IHcBI\",\"radio__body\":\"SuperRadio_radio__body__2GLtG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorInput\":\"SuperInputText_errorInput__1oQjG\",\"error\":\"SuperInputText_error__3JZSZ\",\"errorDisable\":\"SuperInputText_errorDisable__117vg\",\"superInput\":\"SuperInputText_superInput__37Evg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1rAMj\",\"delete\":\"SuperButton_delete__1d803\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2ItVa\",\"focused\":\"SuperCheckbox_focused__237Gk\",\"spanClassName\":\"SuperCheckbox_spanClassName__1yX8R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"SuperSelect_box__3mo1T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Test_wrapper__1YEMY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__26cFA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"NewPassword_wrapper__3UnOY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Profile_wrapper__3AU_I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Registration_wrapper__GoH2E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"RestorePassword_wrapper__3OASo\"};","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? `${s.default} ${s.delete}` : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? s.error : spanClassName }`\n    const finalInputClassName = `${s.error} ${error ? s.errorInput  : s.superInput}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../SuperInputText/SuperInputText'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n        setEditMode(false) // выключить editMode при нажатии Enter\n\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true) // включить editMode при двойном клике\n\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    const spanClassName = `${'сделать красивый стиль для спана'} ${className}`\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperRadio.module.css'\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n    const mappedOptions: any[] = options ? options.map((o, i) => (\n        <label key={name + '-' + i}\n                className={`${s.radio} ${s.style_d}`}>\n            <input\n                type={'radio'}\n                className={s.radio}\n                name={name}\n                checked={o === value}\n                value={o}\n                onChange={onChangeCallback}\n                {...restProps}\n            />\n            {o}\n            <div className={s.radio__checkmark}></div>\n            <div className={s.radio__body}></div>\n        </label>\n    )) : []\n\n    return (\n        <div className={s.wrapper}>\n            {mappedOptions}\n        </div>\n    )\n}\n\nexport default SuperRadio\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\nimport s from './SuperSelect.module.css'\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n\n    const mappedOptions: any[] = options ? options.map((o, i) => (\n                    <option\n                        key={`${o}-${i}`}\n                        value={o}\n                        selected={o === value}\n                    >\n                    {o}\n                    </option>\n    )) : [];\n\n\n    return (\n        <div className={s.box}>\n            <select  onChange={onChangeCallback} {...restProps}>\n                {mappedOptions}\n            </select>\n        </div>\n    )\n}\n\nexport default SuperSelect\n","import React, { useState } from 'react';\r\nimport SuperButton from '../../components/SuperButton/SuperButton';\r\nimport SuperCheckbox from '../../components/SuperCheckbox/SuperCheckbox';\r\nimport SuperEditableSpan from '../../components/SuperEditableSpan/SuperEditableSpan';\r\nimport SuperInputText from '../../components/SuperInputText/SuperInputText';\r\nimport SuperRadio from '../../components/SuperRadio/SuperRadio';\r\nimport SuperSelect from '../../components/SuperSelect/SuperSelect';\r\nimport s from './Test.module.css';\r\n\r\nexport const Test = () => {\r\n  const arr = ['x', 'y', 'z']\r\n  const [value, onChangeOption] = useState(arr[1])\r\n\r\n  return (\r\n      <div className={s.wrapper}>\r\n        <SuperButton>Enter</SuperButton>\r\n        <SuperCheckbox></SuperCheckbox>\r\n        <SuperInputText></SuperInputText>\r\n        <SuperRadio options={arr} value={value} name={'radio'} onChangeOption={onChangeOption}></SuperRadio>\r\n        <SuperSelect options={arr} value={value} onChangeOption={onChangeOption}></SuperSelect>\r\n        <SuperEditableSpan>Enter</SuperEditableSpan>\r\n      </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport s from './Login.module.css';\r\n\r\nexport const Login = () => {\r\n  return (\r\n      <div className={s.wrapper}></div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport s from './NewPassword.module.css';\r\n\r\nexport const NewPassword = () => {\r\n  return (\r\n      <div className={s.wrapper}></div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\n\r\nexport const Profile = () => {\r\n  return (\r\n      <div className={s.wrapper}></div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport s from './Registration.module.css';\r\n\r\nexport const Registration = () => {\r\n  return (\r\n      <div className={s.wrapper}></div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport s from './RestorePassword.module.css';\r\n\r\nexport const RestorePassword = () => {\r\n  return (\r\n      <div className={s.wrapper}></div>\r\n  );\r\n}\r\n","import React from 'react'\nimport {Route, Routes} from 'react-router-dom'\nimport { Test } from '../../../pages/Test/Test'\nimport { Login } from '../../../pages/Login/Login'\nimport { NewPassword } from '../../../pages/NewPassword/NewPassword'\nimport { Profile } from '../../../pages/Profile/Profile'\nimport { Registration } from '../../../pages/Registration/Registration'\nimport { RestorePassword } from '../../../pages/RestorePassword/RestorePassword'\nimport './App.css';\n\nexport const App = () => {\n  return (\n      <Routes>\n          <Route path='/'  element={<Profile/>}/>\n          <Route path=\"login\" element={<Login/>}/>\n          <Route path=\"registration\" element={<Registration/>}/>\n          <Route path=\"profile\" element={<Profile/>}/>\n          <Route path=\"restore_password\" element={<RestorePassword/>}/>\n          <Route path=\"new_password\" element={<NewPassword/>}/>\n          <Route path=\"test\" element={<Test/>}/>\n          <Route path=\"*\" element={<h1>404: PAGE NOT FOUND</h1>} />\n      </Routes>\n  );\n}\n","import { ActionTypes } from \"../actions\"\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\n\r\n\r\n\r\nconst initialState = {\r\n  //  status: 'loading' as RequestStatusType,\r\n  //  error: null as ErrorType\r\n}\r\n\r\n\r\nexport const cardsReducer = (state: InitialStateType = initialState, action: ActionTypes): InitialStateType => {\r\n  switch (action.type) {\r\n      //  case 'APP/SET-STATUS':\r\n      //      return {...state, status: action.status}\r\n      //  case 'APP/SET-ERROR':\r\n      //      return {...state, error: action.error}\r\n      default:\r\n          return state\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//thunk\r\n\r\n\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport { cardsReducer } from \"./reducers/cardsReducer\";\r\n\r\n\r\n\r\nexport type StateType = ReturnType<typeof rootReducer>\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n  cardsPage: cardsReducer,\r\n  // dialogsPage: dialogsReducer,\r\n  // sidebarPage: sidebarReducer,\r\n});\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\n//@ts-ignore\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport {App} from './main/React/app/App';\nimport { store } from './redux/state';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n          <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}